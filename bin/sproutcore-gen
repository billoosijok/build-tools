#!/usr/bin/env node
var util = require('util'),
    pathlib = require('path'),
    fslib = require('fs'),
    curDir = __dirname;

//util.log('test gen');
//generator

var commander = require('commander');

commander
  .command("app [name]", "Create a new app with name in the current project")
  .parse(process.argv);

/*
The BT automatically detects the project folder using the following procedure
- check the current folder for a sc_config. Quit if current folder is root, or matches /[C-Z]:\\/
- if no, go one directory up, and repeat
- if yes, check whether the sc_config has a BT.serverConfig definition.
  - if yes, this is the project folder
  - if no, go one directory up, and repeat (recursively)
 */

function discoverProjectRoot(startdir) {
  var flist = fslib.readDirSync(startdir);
  if (flist.indexOf('sc_config')) {
    var c = fslib.readFileSync(pathlib.join(startdir, 'sc_config')).toString();
    if (c.indexOf("BT.serverConfig") > -1) {
      return startdir;
    }
  }
  if (pathlib.parse(startdir).root === startdir) { // root
    return; // undefined
  }
  return discoverProjectRoot(pathlib.join(startdir, "..")); // default
};


/*

Generators are plain nodejs, with the use of ejs for the templating.

What this command does is check whether there is a folder of the command name given in the generators folder.
If there is, it will call the generator.js command in that folder. This generator.js file should be independent, and
like the other commands use commander preferrably.
The generator.js command is called with the following options:



The generator.js should export two functions:
- create(name, projectPath, appName): a function which when given the project path and the name generates the requested files
- help(): function to return a

 */

// program
//   .option('-f, --force', 'force installation')
//   .parse(process.argv);

// var pkgs = program.args;

// if (!pkgs.length) {
//   console.error('packages required');
//   process.exit(1);
// }

// console.log();
// if (program.force) console.log('  force: install');
// pkgs.forEach(function(pkg){
//   console.log('  install : %s', pkg);
// });
// console.log();